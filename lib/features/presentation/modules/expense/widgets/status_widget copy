import 'package:flutter/material.dart';
import 'package:get/get.dart';
import 'package:organize_more/core/values/converts/convert_text.dart';
import 'package:organize_more/features/presentation/modules/expense/controllers/insert_expense_controller.dart';
import 'package:organize_more/features/presentation/theme/app_constant.dart';
import 'text_form_field_widget.dart';

class StatusWidget extends GetView<InsertExpenseController> {
  const StatusWidget({Key? key}) : super(key: key);

  @override
  Widget build(BuildContext context) {
    // Status _character = controller.status;
    // StatusChanged _characterChanged = controller.statusChanged;
    return Column(
      children: [
        Row(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            const Text('N찾o repetir'),
            GetBuilder<InsertExpenseController>(
              id: 'status',
              builder: (_) {
                return Radio<Status>(
                  value: Status.notReapeat,
                  groupValue: controller.status,
                  onChanged: (Status? value) {
                    controller.status = value!;
                    controller.isRepeatSelected.value = false;
                    controller.isSelectedPlot.value = false;
                    if (controller.status == Status.notReapeat) {
                      controller.statusChanged = StatusChanged.ever;
                    }
                    controller.update(['status']);
                    controller.update(['visibility']);
                    controller.update(['visibility-chenged']);
                    controller.portionditingController.text = "1";
                  },
                );
              },
            ),
            const Text('Repetir'),
            GetBuilder<InsertExpenseController>(
              id: 'status',
              builder: (_) {
                return Radio<Status>(
                  value: Status.repeat,
                  groupValue: controller.status,
                  onChanged: (Status? value) {
                    controller.status = value!;
                    controller.isRepeatSelected.value = true;
                    controller.update(['status']);
                    controller.update(['visibility']);
                  },
                );
              },
            ),
          ],
        ),
        GetBuilder<InsertExpenseController>(
          id: 'visibility',
          builder: (_) {
            return Visibility(
              visible: controller.isRepeatSelected.value,
              child: Row(
                mainAxisAlignment: MainAxisAlignment.center,
                children: [
                  const Text('Sempre'),
                  GetBuilder<InsertExpenseController>(
                    id: 'status-chenged',
                    builder: (_) {
                      return Radio<StatusChanged>(
                        value: StatusChanged.ever,
                        groupValue: controller.statusChanged,
                        onChanged: (StatusChanged? value) {
                          controller.statusChanged = value!;
                          controller.isSelectedPlot.value = false;
                          controller.update(['status-chenged']);
                          controller.update(['visibility-chenged']);
                          controller.portionditingController.text = "1";
                        },
                      );
                    },
                  ),
                  const Text('Parcelado'),
                  GetBuilder<InsertExpenseController>(
                    id: 'status-chenged',
                    builder: (_) {
                      return Radio<StatusChanged>(
                        value: StatusChanged.installments,
                        groupValue: controller.statusChanged,
                        onChanged: (StatusChanged? value) {
                          controller.statusChanged = value!;
                          controller.isSelectedPlot.value = true;
                          controller.update(['status-chenged']);
                          controller.update(['visibility-chenged']);
                        },
                      );
                    },
                  ),
                ],
              ),
            );
          },
        ),
        const SizedBox(height: appDefaultPadding),
        GetBuilder<InsertExpenseController>(
          id: 'visibility-chenged',
          builder: (_) {
            return Visibility(
              visible: controller.isSelectedPlot.value,
              child: TextFormFieldWidget(
                editingController: controller.portionditingController,
                icon: Icons.add,
                label: 'Parcela',
                textInputType: const TextInputType.numberWithOptions(),
                validator: (value) {
                  if (value!.isEmpty) {
                    return 'Parcela obrigat처rio.';
                  } else if (ConvertText.toInteger(value: value) == 0) {
                    return 'Parcela n찾o pode ser zero.';
                  } else if (ConvertText.toInteger(value: value) < 0) {
                    return 'Parcela obrigat처rio.';
                  }
                  return null;
                },
              ),
            );
          },
        ),
      ],
    );
  }
}
